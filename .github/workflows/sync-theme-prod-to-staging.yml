name: Sync Theme from Production to Staging

on:
  schedule:
    # Runs at 13:50 Berlin time (12:50 UTC in winter, 11:50 UTC in summer)
    - cron: "50 11 * * *"
  workflow_dispatch: # Allows manual triggering

jobs:
  sync-theme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout staging branch
        uses: actions/checkout@v4
        with:
          ref: staging
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli @shopify/theme

      - name: Pull theme from production
        env:
          SHOPIFY_FLAG_STORE: ${{ secrets.PRODUCTION_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.PRODUCTION_THEME_ACCESS_PASSWORD }}
          SHOPIFY_CLI_TTY: 0
        run: |
          # Pull the currently published theme
          shopify theme pull --live --force

      - name: Check for changes
        id: check_changes
        run: |
          if [[ -z $(git status --porcelain) ]]; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

          # Add all changes
          git add -A

          # Create commit with timestamp
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          git commit -m "Sync theme from production - $TIMESTAMP"

          # Push to staging branch
          git push origin staging
        continue-on-error: true
        id: push_changes

      - name: Check push result
        if: steps.check_changes.outputs.has_changes == 'true' && steps.push_changes.outcome == 'failure'
        run: |
          echo "::error::Failed to push changes to staging branch. This might be due to conflicts."
          exit 1

      - name: Send failure notification
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Theme Sync Failed - ${new Date().toISOString().split('T')[0]}`,
              body: `The daily theme sync from production to staging failed.\n\nWorkflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}\n\nThis is likely due to conflicts between production and staging themes. Please resolve manually.`,
              labels: ['automation-failure', 'theme-sync']
            });
