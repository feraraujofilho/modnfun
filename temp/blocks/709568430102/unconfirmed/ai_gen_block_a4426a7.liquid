{% doc %}
  @prompt
    Create a custom liquid block that displays product variant inventory availability specific to the current market context, showing stock levels only for the market the customer is browsing from, with proper handling for different markets and locations, no, you have this variant available in two different locations and only one covers the canadian market, so your condition is not right

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-inventory-display-{{ ai_gen_id }} {
    padding: {{ block.settings.padding }}px;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
    border: {{ block.settings.border_width }}px solid {{ block.settings.border_color }};
  }

  .ai-inventory-display__header-{{ ai_gen_id }} {
    margin-bottom: 16px;
  }

  .ai-inventory-display__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    font-weight: 600;
    color: {{ block.settings.text_color }};
    margin: 0 0 8px 0;
  }

  .ai-inventory-display__market-info-{{ ai_gen_id }} {
    font-size: {{ block.settings.text_size }}px;
    color: {{ block.settings.secondary_text_color }};
    margin: 0;
  }

  .ai-inventory-display__variants-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .ai-inventory-display__variant-{{ ai_gen_id }} {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px;
    background-color: {{ block.settings.variant_background_color }};
    border-radius: {{ block.settings.variant_border_radius }}px;
    border: 1px solid {{ block.settings.variant_border_color }};
  }

  .ai-inventory-display__variant-info-{{ ai_gen_id }} {
    flex-grow: 1;
  }

  .ai-inventory-display__variant-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.text_size }}px;
    font-weight: 500;
    color: {{ block.settings.text_color }};
    margin: 0 0 4px 0;
  }

  .ai-inventory-display__variant-options-{{ ai_gen_id }} {
    font-size: {{ block.settings.small_text_size }}px;
    color: {{ block.settings.secondary_text_color }};
    margin: 0;
  }

  .ai-inventory-display__stock-info-{{ ai_gen_id }} {
    text-align: right;
  }

  .ai-inventory-display__stock-level-{{ ai_gen_id }} {
    font-size: {{ block.settings.text_size }}px;
    font-weight: 600;
    margin: 0 0 4px 0;
  }

  .ai-inventory-display__stock-status-{{ ai_gen_id }} {
    font-size: {{ block.settings.small_text_size }}px;
    margin: 0;
    padding: 4px 8px;
    border-radius: 12px;
    display: inline-block;
  }

  .ai-inventory-display__stock-status--in-stock-{{ ai_gen_id }} {
    background-color: {{ block.settings.in_stock_bg_color }};
    color: {{ block.settings.in_stock_text_color }};
  }

  .ai-inventory-display__stock-status--low-stock-{{ ai_gen_id }} {
    background-color: {{ block.settings.low_stock_bg_color }};
    color: {{ block.settings.low_stock_text_color }};
  }

  .ai-inventory-display__stock-status--out-of-stock-{{ ai_gen_id }} {
    background-color: {{ block.settings.out_of_stock_bg_color }};
    color: {{ block.settings.out_of_stock_text_color }};
  }

  .ai-inventory-display__no-product-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
    color: {{ block.settings.secondary_text_color }};
    font-size: {{ block.settings.text_size }}px;
  }

  .ai-inventory-display__location-details-{{ ai_gen_id }} {
    margin-top: 8px;
    padding-top: 8px;
    border-top: 1px solid {{ block.settings.variant_border_color }};
  }

  .ai-inventory-display__location-item-{{ ai_gen_id }} {
    font-size: {{ block.settings.small_text_size }}px;
    color: {{ block.settings.secondary_text_color }};
    margin: 2px 0;
  }

  .ai-inventory-display__market-locations-{{ ai_gen_id }} {
    margin-top: 16px;
    padding-top: 16px;
    border-top: 1px solid {{ block.settings.variant_border_color }};
  }

  .ai-inventory-display__market-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.small_text_size }}px;
    font-weight: 600;
    color: {{ block.settings.text_color }};
    margin: 0 0 8px 0;
  }

  .ai-inventory-display__market-location-{{ ai_gen_id }} {
    font-size: {{ block.settings.small_text_size }}px;
    color: {{ block.settings.secondary_text_color }};
    background-color: {{ block.settings.variant_background_color }};
    padding: 4px 8px;
    margin: 4px 0;
    border-radius: 8px;
    border: 1px solid {{ block.settings.variant_border_color }};
    display: inline-block;
  }

  @media screen and (max-width: 749px) {
    .ai-inventory-display__variant-{{ ai_gen_id }} {
      flex-direction: column;
      align-items: flex-start;
      gap: 8px;
    }

    .ai-inventory-display__stock-info-{{ ai_gen_id }} {
      text-align: left;
      width: 100%;
    }
  }
{% endstyle %}

<market-inventory-display-{{ ai_gen_id }}
  class="ai-inventory-display-{{ ai_gen_id }}"
  data-product-id="{{ product.id }}"
  {{ block.shopify_attributes }}
>
  {% if product %}
    <div class="ai-inventory-display__header-{{ ai_gen_id }}">
      <h3 class="ai-inventory-display__title-{{ ai_gen_id }}">
        {{ block.settings.title }}
      </h3>
      {% if localization.market %}
        <p class="ai-inventory-display__market-info-{{ ai_gen_id }}">
          {{ block.settings.market_label }}: {{ localization.market.name }}
          {% if localization.country %}
            ({{ localization.country.name }})
          {% endif %}
        </p>
      {% endif %}
    </div>

    <div class="ai-inventory-display__variants-{{ ai_gen_id }}">
      {% for variant in product.variants %}
        {% liquid
          assign market_inventory_total = 0
          assign market_locations = ''
          assign has_market_inventory = false
          
          for location in shop.locations
            assign location_inventory = variant.inventory_quantities[location.id]
            if location_inventory and location_inventory > 0
              if localization.market == blank or location.market == localization.market.handle
                assign market_inventory_total = market_inventory_total | plus: location_inventory
                assign has_market_inventory = true
                if market_locations == blank
                  assign market_locations = location.name
                else
                  assign market_locations = market_locations | append: ', ' | append: location.name
                endif
              endif
            endif
          endfor
          
          if market_inventory_total > block.settings.low_stock_threshold
            assign stock_status = 'in-stock'
            assign stock_text = block.settings.in_stock_text
          elsif market_inventory_total > 0
            assign stock_status = 'low-stock'
            assign stock_text = block.settings.low_stock_text
          else
            assign stock_status = 'out-of-stock'
            assign stock_text = block.settings.out_of_stock_text
          endif

          if variant.inventory_policy == 'continue' and market_inventory_total <= 0
            assign stock_status = 'in-stock'
            assign stock_text = block.settings.backorder_text
          endif
        %}

        <div class="ai-inventory-display__variant-{{ ai_gen_id }}">
          <div class="ai-inventory-display__variant-info-{{ ai_gen_id }}">
            <h4 class="ai-inventory-display__variant-title-{{ ai_gen_id }}">
              {% if variant.title == 'Default Title' %}
                {{ product.title }}
              {% else %}
                {{ variant.title }}
              {% endif %}
            </h4>
            {% if variant.title != 'Default Title' %}
              <p class="ai-inventory-display__variant-options-{{ ai_gen_id }}">
                {% for option in variant.options %}
                  {{ option }}{% unless forloop.last %} / {% endunless %}
                {% endfor %}
              </p>
            {% endif %}
            
            {% if block.settings.show_location_details and market_locations != blank %}
              <div class="ai-inventory-display__location-details-{{ ai_gen_id }}">
                {% assign location_array = market_locations | split: ', ' %}
                {% for location_name in location_array %}
                  <div class="ai-inventory-display__location-item-{{ ai_gen_id }}">
                    {{ location_name }}
                  </div>
                {% endfor %}
              </div>
            {% endif %}
          </div>

          <div class="ai-inventory-display__stock-info-{{ ai_gen_id }}">
            {% if block.settings.show_exact_quantity and market_inventory_total > 0 %}
              <p class="ai-inventory-display__stock-level-{{ ai_gen_id }}" style="color: {{ block.settings.text_color }};">
                {{ market_inventory_total }} {{ block.settings.quantity_label }}
              </p>
            {% endif %}
            
            <span class="ai-inventory-display__stock-status-{{ ai_gen_id }} ai-inventory-display__stock-status--{{ stock_status }}-{{ ai_gen_id }}">
              {{ stock_text }}
            </span>
          </div>
        </div>
      {% endfor %}
    </div>

    {% if block.settings.show_market_locations %}
      <div class="ai-inventory-display__market-locations-{{ ai_gen_id }}">
        <h4 class="ai-inventory-display__market-title-{{ ai_gen_id }}">
          {{ block.settings.market_locations_title }}
        </h4>
        {% for location in shop.locations %}
          {% if localization.market == blank or location.market == localization.market.handle %}
            <span class="ai-inventory-display__market-location-{{ ai_gen_id }}">
              {{ location.name }}
              {% if location.address.city %}
                - {{ location.address.city }}
              {% endif %}
            </span>
          {% endif %}
        {% endfor %}
      </div>
    {% endif %}
  {% else %}
    <div class="ai-inventory-display__no-product-{{ ai_gen_id }}"><p>{{ block.settings.no_product_message }}</p>
    </div>
  {% endif %}
</market-inventory-display-{{ ai_gen_id }}>

<script>
  (function() {
    class MarketInventoryDisplay{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.productId = this.dataset.productId;
      }

      connectedCallback() {
        this.setupVariantListener();
        this.updateMarketInfo();
      }

      setupVariantListener() {
        document.addEventListener('variant:change', (event) => {
          if (event.detail && event.detail.variant) {
            this.highlightSelectedVariant(event.detail.variant.id);
          }
        });
      }

      highlightSelectedVariant(variantId) {
        const variants = this.querySelectorAll('.ai-inventory-display__variant-{{ ai_gen_id }}');
        variants.forEach((variant, index) => {
          const productVariants = window.product?.variants || [];
          if (productVariants[index]?.id === variantId) {
            variant.style.borderColor = '{{ block.settings.selected_variant_border_color }}';
            variant.style.backgroundColor = '{{ block.settings.selected_variant_bg_color }}';
          } else {
            variant.style.borderColor = '{{ block.settings.variant_border_color }}';
            variant.style.backgroundColor = '{{ block.settings.variant_background_color }}';
          }
        });
      }

      updateMarketInfo() {
        const marketInfo = this.querySelector('.ai-inventory-display__market-info-{{ ai_gen_id }}');
        if (marketInfo && window.Shopify?.locale) {
          const currentLocale = window.Shopify.locale;
          const currentCountry = window.Shopify.country;
          
          if (currentCountry) {
            marketInfo.textContent = `{{ block.settings.market_label }}: ${currentCountry}`;
          }
        }
      }
    }

    customElements.define('market-inventory-display-{{ ai_gen_id }}', MarketInventoryDisplay{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Market inventory display",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Stock availability"
    },
    {
      "type": "text",
      "id": "market_label",
      "label": "Market label",
      "default": "Current market"
    },
    {
      "type": "text",
      "id": "quantity_label",
      "label": "Quantity label",
      "default": "in stock"
    },
    {
      "type": "text",
      "id": "no_product_message",
      "label": "No product message",
      "default": "Please select a product to view inventory"
    },
    {
      "type": "header",
      "content": "Stock status text"
    },
    {
      "type": "text",
      "id": "in_stock_text",
      "label": "In stock text",
      "default": "In stock"
    },
    {
      "type": "text",
      "id": "low_stock_text",
      "label": "Low stock text",
      "default": "Low stock"
    },
    {
      "type": "text",
      "id": "out_of_stock_text",
      "label": "Out of stock text",
      "default": "Out of stock"
    },
    {
      "type": "text",
      "id": "backorder_text",
      "label": "Backorder text",
      "default": "Available to order"
    },
    {
      "type": "header",
      "content": "Inventory settings"
    },
    {
      "type": "range",
      "id": "low_stock_threshold",
      "min": 1,
      "max": 20,
      "step": 1,
      "label": "Low stock threshold",
      "default": 5
    },
    {
      "type": "checkbox",
      "id": "show_exact_quantity",
      "label": "Show exact quantity",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_location_details",
      "label": "Show location details per variant",
      "default": false
    },
    {
      "type": "header",
      "content": "Market locations"
    },
    {
      "type": "checkbox",
      "id": "show_market_locations",
      "label": "Show market locations",
      "default": true
    },
    {
      "type": "text",
      "id": "market_locations_title",
      "label": "Market locations title",
      "default": "Available in this market"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "secondary_text_color",
      "label": "Secondary text color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "variant_background_color",
      "label": "Variant background color",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "variant_border_color",
      "label": "Variant border color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "selected_variant_bg_color",
      "label": "Selected variant background",
      "default": "#f0f8ff"
    },
    {
      "type": "color",
      "id": "selected_variant_border_color",
      "label": "Selected variant border",
      "default": "#007acc"
    },
    {
      "type": "header",
      "content": "Stock status colors"
    },
    {
      "type": "color",
      "id": "in_stock_bg_color",
      "label": "In stock background",
      "default": "#d4edda"
    },
    {
      "type": "color",
      "id": "in_stock_text_color",
      "label": "In stock text",
      "default": "#155724"
    },
    {
      "type": "color",
      "id": "low_stock_bg_color",
      "label": "Low stock background",
      "default": "#fff3cd"
    },
    {
      "type": "color",
      "id": "low_stock_text_color",
      "label": "Low stock text",
      "default": "#856404"
    },
    {
      "type": "color",
      "id": "out_of_stock_bg_color",
      "label": "Out of stock background",
      "default": "#f8d7da"
    },
    {
      "type": "color",
      "id": "out_of_stock_text_color",
      "label": "Out of stock text",
      "default": "#721c24"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "variant_border_radius",
      "min": 0,
      "max": 16,
      "step": 2,
      "unit": "px",
      "label": "Variant border radius",
      "default": 6
    },
    {
      "type": "range",
      "id": "border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Border width",
      "default": 1
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Title size",
      "default": 18
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 14
    },
    {
      "type": "range",
      "id": "small_text_size",
      "min": 10,
      "max": 14,
      "step": 1,
      "unit": "px",
      "label": "Small text size",
      "default": 12
    }
  ],
  "presets": [
    {
      "name": "Market inventory display"
    }
  ],
  "tag": null
}
{% endschema %}